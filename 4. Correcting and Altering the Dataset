## For more on regex construction: https://regex101.com/

## Load needed packages
library(tidyverse)
library(dplyr)
library(stringr)

## After discussing with a colleague, updated code to use stringr str_extract() and regex
## For more on regex construction: https://regex101.com/

library(stringr) ## Load stringr

## Exploration
## Gets every instance of HarvardX or MITx and prints it
str_extract_all(HXMITX$course_id, 'HarvardX')
str_extract_all(HXMITX$course_id, 'MITx')

## Sets True/False for each case where it matches/does not match HarvardX or MITx
str_detect(HXMITX$course_id, 'HarvardX')
str_detect(HXMITX$course_id, 'MITx')


## Needed fields
## Create field "institution"
HXMITX$institution <- str_extract(HXMITX$course_id,"^\\w+(?=/)") ## Returns all before first /

## Create field "course_code"
HXMITX$course_code <- str_extract(HXMITX$course_id,"(?<=/).+(?=/)") ## Returns all between first and second /

## Create field "year_term"
HXMITX$year_term <- str_extract(HXMITX$course_id,"(?<=/)\\w+$") ## Returns all after second /

## Create field "year"
HXMITX$year <- str_extract(HXMITX$course_id,"(?<=/)\\d{4}") ## Returns all after second / and before _

## Create field "term"
HXMITX$term <- str_extract(HXMITX$course_id,"(?<=/\\d{4}_)\\w+$") ## Retuns all after _

## Create Letter Grade
HXMITX$letter_grade <-  cut(HXMITX$grade,
                        breaks = c(0, .6, .7, .8, .9, 1.01), # The grade range goes to 1.01
                        labels = c("F", "D", "C", "B", "A"),
                        right = FALSE, 
                        include.highest = TRUE,
                        include.lowest = TRUE)

#-------------------------------------------------
## Drop test and created fields
#HXMITX$institution <- NULL
#HXMITX$course <- NULL
#HXMITX$year_term <- NULL
#HXMITX$year <- NULL
#HXMITX$term <- NULL
#HXMITX$HarvardX <- NULL
#HXMITX$MITx <- NULL
#HXMITX$harvardx <- NULL
#HXMITX$mitx <- NULL
#HXMITX$letter_grade <- NULL
